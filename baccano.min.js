var Baccano=function(r){"use strict";function u(r){if(Array.isArray(r)){for(var n=0,u=Array(r.length);n<r.length;n++)u[n]=r[n];return u}return Array.from(r)}var e=function r(n){return{value:n,reduce:function(r){return r(n)},inspect:function(r){return console.log("Just("+r(n)+")")},map:function(u){return r(u(n))},ap:function(u){return r(u.reduce(function(r){return r})(n))},chain:function(u){return r(u(n).reduce(function(r){return r}))}}},t=function r(){return{value:null,reduce:function(r){return null},inspect:function(r){return console.log("Nothing")},map:function(n){return r()},ap:function(n){return r()},chain:function(n){return r()}}},o={Just:e,Nothing:t,of:function(r){return void 0!==r&&null!==n?e(r):t()}},c=function(){for(var r=arguments.length,n=Array(r),e=0;e<r;e++)n[e]=arguments[e];return function(r){var e=n.reduce(function(r,n){var e=r.value,t=r.error;try{return{value:e.map(n),error:t}}catch(r){return{value:o.Nothing(),error:t.map(function(n){return[].concat(u(n),[r.message])})}}},{value:o.of(r),error:o.of([])}),t=e.value,c=e.error;return{value:t.reduce(function(r){return r}),error:c.reduce(function(r){return r})}}};return r.compose=c,r}({});
